<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.robot.mybatis.mapper.QuestionLogTMapper">
  <resultMap id="BaseResultMap" type="com.robot.pojo.QuestionLogT">
    <result column="id" jdbcType="DECIMAL" property="id" />
    <result column="log_type" jdbcType="VARCHAR" property="logType" />
    <result column="user_question" jdbcType="VARCHAR" property="userQuestion" />
    <result column="answer_source" jdbcType="VARCHAR" property="answerSource" />
    <result column="answer_channel" jdbcType="VARCHAR" property="answerChannel" />
    <result column="constraint_rule" jdbcType="VARCHAR" property="constraintRule" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="nlp_server" jdbcType="VARCHAR" property="nlpServer" />
    <result column="reply_time" jdbcType="TIMESTAMP" property="replyTime" />
    <result column="application_id" jdbcType="DECIMAL" property="applicationId" />
    <result column="create_by" jdbcType="DECIMAL" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="DECIMAL" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remove" jdbcType="BIT" property="remove" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.robot.pojo.QuestionLogTWithBLOBs">
    <result column="standard_input_json" jdbcType="LONGVARCHAR" property="standardInputJson" />
    <result column="standard_output_json" jdbcType="LONGVARCHAR" property="standardOutputJson" />
    <result column="reply_content" jdbcType="LONGVARCHAR" property="replyContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, log_type, user_question, answer_source, answer_channel, constraint_rule, start_time, 
    end_time, nlp_server, reply_time, application_id, create_by, create_time, update_by, 
    update_time, remove
  </sql>
  <sql id="Blob_Column_List">
    standard_input_json, standard_output_json, reply_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.robot.pojo.QuestionLogTExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question_log_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.robot.pojo.QuestionLogTExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question_log_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.robot.pojo.QuestionLogTExample">
    delete from question_log_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.robot.pojo.QuestionLogTWithBLOBs">
    insert into question_log_t (id, log_type, user_question, 
      answer_source, answer_channel, constraint_rule, 
      start_time, end_time, nlp_server, 
      reply_time, application_id, create_by, 
      create_time, update_by, update_time, 
      remove, standard_input_json, standard_output_json, 
      reply_content)
    values (#{id,jdbcType=DECIMAL}, #{logType,jdbcType=VARCHAR}, #{userQuestion,jdbcType=VARCHAR}, 
      #{answerSource,jdbcType=VARCHAR}, #{answerChannel,jdbcType=VARCHAR}, #{constraintRule,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{nlpServer,jdbcType=VARCHAR}, 
      #{replyTime,jdbcType=TIMESTAMP}, #{applicationId,jdbcType=DECIMAL}, #{createBy,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=DECIMAL}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remove,jdbcType=BIT}, #{standardInputJson,jdbcType=LONGVARCHAR}, #{standardOutputJson,jdbcType=LONGVARCHAR}, 
      #{replyContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.robot.pojo.QuestionLogTWithBLOBs">
    insert into question_log_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="logType != null">
        log_type,
      </if>
      <if test="userQuestion != null">
        user_question,
      </if>
      <if test="answerSource != null">
        answer_source,
      </if>
      <if test="answerChannel != null">
        answer_channel,
      </if>
      <if test="constraintRule != null">
        constraint_rule,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="nlpServer != null">
        nlp_server,
      </if>
      <if test="replyTime != null">
        reply_time,
      </if>
      <if test="applicationId != null">
        application_id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remove != null">
        remove,
      </if>
      <if test="standardInputJson != null">
        standard_input_json,
      </if>
      <if test="standardOutputJson != null">
        standard_output_json,
      </if>
      <if test="replyContent != null">
        reply_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=VARCHAR},
      </if>
      <if test="userQuestion != null">
        #{userQuestion,jdbcType=VARCHAR},
      </if>
      <if test="answerSource != null">
        #{answerSource,jdbcType=VARCHAR},
      </if>
      <if test="answerChannel != null">
        #{answerChannel,jdbcType=VARCHAR},
      </if>
      <if test="constraintRule != null">
        #{constraintRule,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nlpServer != null">
        #{nlpServer,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null">
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applicationId != null">
        #{applicationId,jdbcType=DECIMAL},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=DECIMAL},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remove != null">
        #{remove,jdbcType=BIT},
      </if>
      <if test="standardInputJson != null">
        #{standardInputJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="standardOutputJson != null">
        #{standardOutputJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="replyContent != null">
        #{replyContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.robot.pojo.QuestionLogTExample" resultType="java.lang.Long">
    select count(*) from question_log_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update question_log_t
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.logType != null">
        log_type = #{record.logType,jdbcType=VARCHAR},
      </if>
      <if test="record.userQuestion != null">
        user_question = #{record.userQuestion,jdbcType=VARCHAR},
      </if>
      <if test="record.answerSource != null">
        answer_source = #{record.answerSource,jdbcType=VARCHAR},
      </if>
      <if test="record.answerChannel != null">
        answer_channel = #{record.answerChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.constraintRule != null">
        constraint_rule = #{record.constraintRule,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nlpServer != null">
        nlp_server = #{record.nlpServer,jdbcType=VARCHAR},
      </if>
      <if test="record.replyTime != null">
        reply_time = #{record.replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.applicationId != null">
        application_id = #{record.applicationId,jdbcType=DECIMAL},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=DECIMAL},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remove != null">
        remove = #{record.remove,jdbcType=BIT},
      </if>
      <if test="record.standardInputJson != null">
        standard_input_json = #{record.standardInputJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.standardOutputJson != null">
        standard_output_json = #{record.standardOutputJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.replyContent != null">
        reply_content = #{record.replyContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update question_log_t
    set id = #{record.id,jdbcType=DECIMAL},
      log_type = #{record.logType,jdbcType=VARCHAR},
      user_question = #{record.userQuestion,jdbcType=VARCHAR},
      answer_source = #{record.answerSource,jdbcType=VARCHAR},
      answer_channel = #{record.answerChannel,jdbcType=VARCHAR},
      constraint_rule = #{record.constraintRule,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      nlp_server = #{record.nlpServer,jdbcType=VARCHAR},
      reply_time = #{record.replyTime,jdbcType=TIMESTAMP},
      application_id = #{record.applicationId,jdbcType=DECIMAL},
      create_by = #{record.createBy,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=DECIMAL},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remove = #{record.remove,jdbcType=BIT},
      standard_input_json = #{record.standardInputJson,jdbcType=LONGVARCHAR},
      standard_output_json = #{record.standardOutputJson,jdbcType=LONGVARCHAR},
      reply_content = #{record.replyContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update question_log_t
    set id = #{record.id,jdbcType=DECIMAL},
      log_type = #{record.logType,jdbcType=VARCHAR},
      user_question = #{record.userQuestion,jdbcType=VARCHAR},
      answer_source = #{record.answerSource,jdbcType=VARCHAR},
      answer_channel = #{record.answerChannel,jdbcType=VARCHAR},
      constraint_rule = #{record.constraintRule,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      nlp_server = #{record.nlpServer,jdbcType=VARCHAR},
      reply_time = #{record.replyTime,jdbcType=TIMESTAMP},
      application_id = #{record.applicationId,jdbcType=DECIMAL},
      create_by = #{record.createBy,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=DECIMAL},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remove = #{record.remove,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>